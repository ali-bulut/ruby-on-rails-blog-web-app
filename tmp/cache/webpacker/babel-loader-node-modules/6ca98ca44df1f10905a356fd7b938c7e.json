{"ast":null,"code":"alert(\"hey there\");\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.sortable = factory();\n  }\n})(this, function () {\n  /*\n   * HTML5 Sortable library\n   * https://github.com/voidberg/html5sortable\n   *\n   * Original code copyright 2012 Ali Farhadi.\n   * This version is mantained by Alexandru Badiu <andu@ctrlz.ro> & Lukas Oppermann <lukas@vea.re>\n   * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\n   *\n   * Released under the MIT license.\n   */\n  'use strict';\n  /*\n   * variables global to the plugin\n   */\n\n  var dragging;\n  var draggingHeight;\n  var placeholders = [];\n  var sortables = [];\n  /**\n   * Get or set data on element\n   * @param {Element} element\n   * @param {string} key\n   * @param {*} value\n   * @return {*}\n   */\n\n  var _data = function _data(element, key, value) {\n    if (value === undefined) {\n      return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    } else {\n      element.h5s = element.h5s || {};\n      element.h5s.data = element.h5s.data || {};\n      element.h5s.data[key] = value;\n    }\n  };\n  /**\n   * Remove data from element\n   * @param {Element} element\n   */\n\n\n  var _removeData = function _removeData(element) {\n    if (element.h5s) {\n      delete element.h5s.data;\n    }\n  };\n  /**\n   * Cross-browser shortcut for actual `Element.matches` method,\n   * which has vendor prefix in older browsers\n   */\n\n\n  var matches;\n\n  switch (true) {\n    case 'matches' in window.Element.prototype:\n      matches = 'matches';\n      break;\n\n    case 'mozMatchesSelector' in window.Element.prototype:\n      matches = 'mozMatchesSelector';\n      break;\n\n    case 'msMatchesSelector' in window.Element.prototype:\n      matches = 'msMatchesSelector';\n      break;\n\n    case 'webkitMatchesSelector' in window.Element.prototype:\n      matches = 'webkitMatchesSelector';\n      break;\n  }\n  /**\n   * Filter only wanted nodes\n   * @param {Array|NodeList} nodes\n   * @param {Array/string} wanted\n   * @returns {Array}\n   */\n\n\n  var _filter = function _filter(nodes, wanted) {\n    if (!wanted) {\n      return Array.prototype.slice.call(nodes);\n    }\n\n    var result = [];\n\n    for (var i = 0; i < nodes.length; ++i) {\n      if (typeof wanted === 'string' && nodes[i][matches](wanted)) {\n        result.push(nodes[i]);\n      }\n\n      if (wanted.indexOf(nodes[i]) !== -1) {\n        result.push(nodes[i]);\n      }\n    }\n\n    return result;\n  };\n  /**\n   * @param {Array|Element} element\n   * @param {Array|string} event\n   * @param {Function} callback\n   */\n\n\n  var _on = function _on(element, event, callback) {\n    if (element instanceof Array) {\n      for (var i = 0; i < element.length; ++i) {\n        _on(element[i], event, callback);\n      }\n\n      return;\n    }\n\n    element.addEventListener(event, callback);\n    element.h5s = element.h5s || {};\n    element.h5s.events = element.h5s.events || {};\n    element.h5s.events[event] = callback;\n  };\n  /**\n   * @param {Array|Element} element\n   * @param {Array|string} event\n   */\n\n\n  var _off = function _off(element, event) {\n    if (element instanceof Array) {\n      for (var i = 0; i < element.length; ++i) {\n        _off(element[i], event);\n      }\n\n      return;\n    }\n\n    if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n      element.removeEventListener(event, element.h5s.events[event]);\n      delete element.h5s.events[event];\n    }\n  };\n  /**\n   * @param {Array|Element} element\n   * @param {string} attribute\n   * @param {*} value\n   */\n\n\n  var _attr = function _attr(element, attribute, value) {\n    if (element instanceof Array) {\n      for (var i = 0; i < element.length; ++i) {\n        _attr(element[i], attribute, value);\n      }\n\n      return;\n    }\n\n    element.setAttribute(attribute, value);\n  };\n  /**\n   * @param {Array|Element} element\n   * @param {string} attribute\n   */\n\n\n  var _removeAttr = function _removeAttr(element, attribute) {\n    if (element instanceof Array) {\n      for (var i = 0; i < element.length; ++i) {\n        _removeAttr(element[i], attribute);\n      }\n\n      return;\n    }\n\n    element.removeAttribute(attribute);\n  };\n  /**\n   * @param {Element} element\n   * @returns {{left: *, top: *}}\n   */\n\n\n  var _offset = function _offset(element) {\n    var rect = element.getClientRects()[0];\n    return {\n      left: rect.left + window.scrollX,\n      top: rect.top + window.scrollY\n    };\n  };\n  /*\n   * remove event handlers from items\n   * @param {Array|NodeList} items\n   */\n\n\n  var _removeItemEvents = function _removeItemEvents(items) {\n    _off(items, 'dragstart');\n\n    _off(items, 'dragend');\n\n    _off(items, 'selectstart');\n\n    _off(items, 'dragover');\n\n    _off(items, 'dragenter');\n\n    _off(items, 'drop');\n  };\n  /*\n   * Remove event handlers from sortable\n   * @param {Element} sortable a single sortable\n   */\n\n\n  var _removeSortableEvents = function _removeSortableEvents(sortable) {\n    _off(sortable, 'dragover');\n\n    _off(sortable, 'dragenter');\n\n    _off(sortable, 'drop');\n  };\n  /*\n   * Attach ghost to dataTransfer object\n   * @param {Event} original event\n   * @param {object} ghost-object with item, x and y coordinates\n   */\n\n\n  var _attachGhost = function _attachGhost(event, ghost) {\n    // this needs to be set for HTML5 drag & drop to work\n    event.dataTransfer.effectAllowed = 'move';\n    event.dataTransfer.setData('text', ''); // check if setDragImage method is available\n\n    if (event.dataTransfer.setDragImage) {\n      event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y);\n    }\n  };\n  /**\n   * _addGhostPos clones the dragged item and adds it as a Ghost item\n   * @param {Event} event - the event fired when dragstart is triggered\n   * @param {object} ghost - .draggedItem = Element\n   */\n\n\n  var _addGhostPos = function _addGhostPos(event, ghost) {\n    if (!ghost.x) {\n      ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left);\n    }\n\n    if (!ghost.y) {\n      ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top);\n    }\n\n    return ghost;\n  };\n  /**\n   * _makeGhost decides which way to make a ghost and passes it to attachGhost\n   * @param {Element} draggedItem - the item that the user drags\n   */\n\n\n  var _makeGhost = function _makeGhost(draggedItem) {\n    return {\n      draggedItem: draggedItem\n    };\n  };\n  /**\n   * _getGhost constructs ghost and attaches it to dataTransfer\n   * @param {Event} event - the original drag event object\n   * @param {Element} draggedItem - the item that the user drags\n   */\n  // TODO: could draggedItem be replaced by event.target in all instances\n\n\n  var _getGhost = function _getGhost(event, draggedItem) {\n    // add ghost item & draggedItem to ghost object\n    var ghost = _makeGhost(draggedItem); // attach ghost position\n\n\n    ghost = _addGhostPos(event, ghost); // attach ghost to dataTransfer\n\n    _attachGhost(event, ghost);\n  };\n  /*\n   * Remove data from sortable\n   * @param {Element} sortable a single sortable\n   */\n\n\n  var _removeSortableData = function _removeSortableData(sortable) {\n    _removeData(sortable);\n\n    _removeAttr(sortable, 'aria-dropeffect');\n  };\n  /*\n   * Remove data from items\n   * @param {Array|Element} items\n   */\n\n\n  var _removeItemData = function _removeItemData(items) {\n    _removeAttr(items, 'aria-grabbed');\n\n    _removeAttr(items, 'draggable');\n\n    _removeAttr(items, 'role');\n  };\n  /*\n   * Check if two lists are connected\n   * @param {Element} curList\n   * @param {Element} destList\n   */\n\n\n  var _listsConnected = function _listsConnected(curList, destList) {\n    if (curList === destList) {\n      return true;\n    }\n\n    if (_data(curList, 'connectWith') !== undefined) {\n      return _data(curList, 'connectWith') === _data(destList, 'connectWith');\n    }\n\n    return false;\n  };\n\n  var _getHandles = function _getHandles(items, handle) {\n    var result = [];\n    var handles;\n\n    if (!handle) {\n      return items;\n    }\n\n    for (var i = 0; i < items.length; ++i) {\n      handles = items[i].querySelectorAll(handle);\n      result = result.concat(Array.prototype.slice.call(handles));\n    }\n\n    return result;\n  };\n  /*\n   * Destroy the sortable\n   * @param {Element} sortableElement a single sortable\n   */\n\n\n  var _destroySortable = function _destroySortable(sortableElement) {\n    var opts = _data(sortableElement, 'opts') || {};\n\n    var items = _filter(sortableElement.children, opts.items);\n\n    var handles = _getHandles(items, opts.handle); // remove event handlers & data from sortable\n\n\n    _removeSortableEvents(sortableElement);\n\n    _removeSortableData(sortableElement); // remove event handlers & data from items\n\n\n    _off(handles, 'mousedown');\n\n    _removeItemEvents(items);\n\n    _removeItemData(items);\n  };\n  /*\n   * Enable the sortable\n   * @param {Element} sortableElement a single sortable\n   */\n\n\n  var _enableSortable = function _enableSortable(sortableElement) {\n    var opts = _data(sortableElement, 'opts');\n\n    var items = _filter(sortableElement.children, opts.items);\n\n    var handles = _getHandles(items, opts.handle);\n\n    _attr(sortableElement, 'aria-dropeffect', 'move');\n\n    _attr(handles, 'draggable', 'true'); // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n\n\n    var spanEl = (document || window.document).createElement('span');\n\n    if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n      _on(handles, 'mousedown', function () {\n        if (items.indexOf(this) !== -1) {\n          this.dragDrop();\n        } else {\n          var parent = this.parentElement;\n\n          while (items.indexOf(parent) === -1) {\n            parent = parent.parentElement;\n          }\n\n          parent.dragDrop();\n        }\n      });\n    }\n  };\n  /*\n   * Disable the sortable\n   * @param {Element} sortableElement a single sortable\n   */\n\n\n  var _disableSortable = function _disableSortable(sortableElement) {\n    var opts = _data(sortableElement, 'opts');\n\n    var items = _filter(sortableElement.children, opts.items);\n\n    var handles = _getHandles(items, opts.handle);\n\n    _attr(sortableElement, 'aria-dropeffect', 'none');\n\n    _attr(handles, 'draggable', 'false');\n\n    _off(handles, 'mousedown');\n  };\n  /*\n   * Reload the sortable\n   * @param {Element} sortableElement a single sortable\n   * @description events need to be removed to not be double bound\n   */\n\n\n  var _reloadSortable = function _reloadSortable(sortableElement) {\n    var opts = _data(sortableElement, 'opts');\n\n    var items = _filter(sortableElement.children, opts.items);\n\n    var handles = _getHandles(items, opts.handle); // remove event handlers from items\n\n\n    _removeItemEvents(items);\n\n    _off(handles, 'mousedown'); // remove event handlers from sortable\n\n\n    _removeSortableEvents(sortableElement);\n  };\n  /**\n   * Get position of the element relatively to its sibling elements\n   * @param {Element} element\n   * @returns {number}\n   */\n\n\n  var _index = function _index(element) {\n    if (!element.parentElement) {\n      return 0;\n    }\n\n    return Array.prototype.indexOf.call(element.parentElement.children, element);\n  };\n  /**\n   * Whether element is in DOM\n   * @param {Element} element\n   * @returns {boolean}\n   */\n\n\n  var _attached = function _attached(element) {\n    return !!element.parentNode;\n  };\n  /**\n   * Convert HTML string into DOM element\n   * @param {Element|string} html\n   * @returns {Element}\n   */\n\n\n  var _html2element = function _html2element(html) {\n    if (typeof html !== 'string') {\n      return html;\n    }\n\n    var div = document.createElement('div');\n    div.innerHTML = html;\n    return div.firstChild;\n  };\n  /**\n   * Insert before target\n   * @param {Element} target\n   * @param {Element} element\n   */\n\n\n  var _before = function _before(target, element) {\n    target.parentElement.insertBefore(element, target);\n  };\n  /**\n   * Insert after target\n   * @param {Element} target\n   * @param {Element} element\n   */\n\n\n  var _after = function _after(target, element) {\n    target.parentElement.insertBefore(element, target.nextElementSibling);\n  };\n  /**\n   * Detach element from DOM\n   * @param {Element} element\n   */\n\n\n  var _detach = function _detach(element) {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  };\n  /**\n   * Make native event that can be dispatched afterwards\n   * @param {string} name\n   * @param {object} detail\n   * @returns {CustomEvent}\n   */\n\n\n  var _makeEvent = function _makeEvent(name, detail) {\n    var e = document.createEvent('Event');\n\n    if (detail) {\n      e.detail = detail;\n    }\n\n    e.initEvent(name, false, true);\n    return e;\n  };\n  /**\n   * @param {Element} sortableElement\n   * @param {CustomEvent} event\n   */\n\n\n  var _dispatchEventOnConnected = function _dispatchEventOnConnected(sortableElement, event) {\n    sortables.forEach(function (target) {\n      if (_listsConnected(sortableElement, target)) {\n        target.dispatchEvent(event);\n      }\n    });\n  };\n  /*\n   * Public sortable object\n   * @param {Array|NodeList} sortableElements\n   * @param {object|string} options|method\n   */\n\n\n  var sortable = function sortable(sortableElements, options) {\n    var method = String(options);\n\n    options = function (options) {\n      var result = {\n        connectWith: false,\n        placeholder: null,\n        // dragImage can be null or a Element\n        dragImage: null,\n        disableIEFix: false,\n        placeholderClass: 'sortable-placeholder',\n        draggingClass: 'sortable-dragging',\n        hoverClass: false\n      };\n\n      for (var option in options) {\n        result[option] = options[option];\n      }\n\n      return result;\n    }(options);\n\n    if (typeof sortableElements === 'string') {\n      sortableElements = document.querySelectorAll(sortableElements);\n    }\n\n    if (sortableElements instanceof window.Element) {\n      sortableElements = [sortableElements];\n    }\n\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    /* TODO: maxstatements should be 25, fix and remove line below */\n\n    /*jshint maxstatements:false */\n\n    sortableElements.forEach(function (sortableElement) {\n      if (/enable|disable|destroy/.test(method)) {\n        sortable[method](sortableElement);\n        return;\n      } // get options & set options on sortable\n\n\n      options = _data(sortableElement, 'opts') || options;\n\n      _data(sortableElement, 'opts', options); // reset sortable\n\n\n      _reloadSortable(sortableElement); // initialize\n\n\n      var items = _filter(sortableElement.children, options.items);\n\n      var index;\n      var startParent;\n      var placeholder = options.placeholder;\n\n      if (!placeholder) {\n        placeholder = document.createElement(/^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div');\n      }\n\n      placeholder = _html2element(placeholder);\n      placeholder.classList.add.apply(placeholder.classList, options.placeholderClass.split(' ')); // setup sortable ids\n\n      if (!sortableElement.getAttribute('data-sortable-id')) {\n        var id = sortables.length;\n        sortables[id] = sortableElement;\n\n        _attr(sortableElement, 'data-sortable-id', id);\n\n        _attr(items, 'data-item-sortable-id', id);\n      }\n\n      _data(sortableElement, 'items', options.items);\n\n      placeholders.push(placeholder);\n\n      if (options.connectWith) {\n        _data(sortableElement, 'connectWith', options.connectWith);\n      }\n\n      _enableSortable(sortableElement);\n\n      _attr(items, 'role', 'option');\n\n      _attr(items, 'aria-grabbed', 'false'); // Mouse over class\n\n\n      if (options.hoverClass) {\n        var hoverClass = 'sortable-over';\n\n        if (typeof options.hoverClass === 'string') {\n          hoverClass = options.hoverClass;\n        }\n\n        _on(items, 'mouseenter', function () {\n          this.classList.add(hoverClass);\n        });\n\n        _on(items, 'mouseleave', function () {\n          this.classList.remove(hoverClass);\n        });\n      } // Handle drag events on draggable items\n\n\n      _on(items, 'dragstart', function (e) {\n        e.stopImmediatePropagation();\n\n        if (options.dragImage) {\n          _attachGhost(e, {\n            draggedItem: options.dragImage,\n            x: 0,\n            y: 0\n          });\n\n          console.log('WARNING: dragImage option is deprecated' + ' and will be removed in the future!');\n        } else {\n          // add transparent clone or other ghost to cursor\n          _getGhost(e, this);\n        } // cache selsection & add attr for dragging\n\n\n        this.classList.add(options.draggingClass);\n        dragging = this;\n\n        _attr(dragging, 'aria-grabbed', 'true'); // grab values\n\n\n        index = _index(dragging);\n        draggingHeight = parseInt(window.getComputedStyle(dragging).height);\n        startParent = this.parentElement; // dispatch sortstart event on each element in group\n\n        _dispatchEventOnConnected(sortableElement, _makeEvent('sortstart', {\n          item: dragging,\n          placeholder: placeholder,\n          startparent: startParent\n        }));\n      }); // Handle drag events on draggable items\n\n\n      _on(items, 'dragend', function () {\n        var newParent;\n\n        if (!dragging) {\n          return;\n        } // remove dragging attributes and show item\n\n\n        dragging.classList.remove(options.draggingClass);\n\n        _attr(dragging, 'aria-grabbed', 'false');\n\n        dragging.style.display = dragging.oldDisplay;\n        delete dragging.oldDisplay;\n        placeholders.forEach(_detach);\n        newParent = this.parentElement;\n\n        _dispatchEventOnConnected(sortableElement, _makeEvent('sortstop', {\n          item: dragging,\n          startparent: startParent\n        }));\n\n        if (index !== _index(dragging) || startParent !== newParent) {\n          _dispatchEventOnConnected(sortableElement, _makeEvent('sortupdate', {\n            item: dragging,\n            index: _filter(newParent.children, _data(newParent, 'items')).indexOf(dragging),\n            oldindex: items.indexOf(dragging),\n            elementIndex: _index(dragging),\n            oldElementIndex: index,\n            startparent: startParent,\n            endparent: newParent\n          }));\n        }\n\n        dragging = null;\n        draggingHeight = null;\n      }); // Handle drop event on sortable & placeholder\n      // TODO: REMOVE placeholder?????\n\n\n      _on([sortableElement, placeholder], 'drop', function (e) {\n        var visiblePlaceholder;\n\n        if (!_listsConnected(sortableElement, dragging.parentElement)) {\n          return;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        visiblePlaceholder = placeholders.filter(_attached)[0];\n\n        _after(visiblePlaceholder, dragging);\n\n        dragging.dispatchEvent(_makeEvent('dragend'));\n      }); // Handle dragover and dragenter events on draggable items\n\n\n      var onDragOverEnter = function onDragOverEnter(e) {\n        if (!_listsConnected(sortableElement, dragging.parentElement)) {\n          return;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        e.dataTransfer.dropEffect = 'move';\n\n        if (items.indexOf(this) !== -1) {\n          var thisHeight = parseInt(window.getComputedStyle(this).height);\n\n          var placeholderIndex = _index(placeholder);\n\n          var thisIndex = _index(this);\n\n          if (options.forcePlaceholderSize) {\n            placeholder.style.height = draggingHeight + 'px';\n          } // Check if `this` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n\n\n          if (thisHeight > draggingHeight) {\n            // Dead zone?\n            var deadZone = thisHeight - draggingHeight;\n\n            var offsetTop = _offset(this).top;\n\n            if (placeholderIndex < thisIndex && e.pageY < offsetTop + deadZone) {\n              return;\n            }\n\n            if (placeholderIndex > thisIndex && e.pageY > offsetTop + thisHeight - deadZone) {\n              return;\n            }\n          }\n\n          if (dragging.oldDisplay === undefined) {\n            dragging.oldDisplay = dragging.style.display;\n          }\n\n          dragging.style.display = 'none';\n\n          if (placeholderIndex < thisIndex) {\n            _after(this, placeholder);\n          } else {\n            _before(this, placeholder);\n          } // Intentionally violated chaining, it is more complex otherwise\n\n\n          placeholders.filter(function (element) {\n            return element !== placeholder;\n          }).forEach(_detach);\n        } else {\n          if (placeholders.indexOf(this) === -1 && !_filter(this.children, options.items).length) {\n            placeholders.forEach(_detach);\n            this.appendChild(placeholder);\n          }\n        }\n      };\n\n      _on(items.concat(sortableElement), 'dragover', onDragOverEnter);\n\n      _on(items.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n  };\n\n  sortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n  };\n\n  sortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n  };\n\n  sortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n  };\n\n  return sortable;\n});","map":{"version":3,"sources":["/Users/alibulut/Workspace/Ruby on Rails/ruby-on-rails-blog-web-app/app/javascript/custom/html.sortable.js"],"names":["alert","root","factory","define","amd","exports","module","sortable","dragging","draggingHeight","placeholders","sortables","_data","element","key","value","undefined","h5s","data","_removeData","matches","window","Element","prototype","_filter","nodes","wanted","Array","slice","call","result","i","length","push","indexOf","_on","event","callback","addEventListener","events","_off","removeEventListener","_attr","attribute","setAttribute","_removeAttr","removeAttribute","_offset","rect","getClientRects","left","scrollX","top","scrollY","_removeItemEvents","items","_removeSortableEvents","_attachGhost","ghost","dataTransfer","effectAllowed","setData","setDragImage","draggedItem","x","y","_addGhostPos","parseInt","pageX","pageY","_makeGhost","_getGhost","_removeSortableData","_removeItemData","_listsConnected","curList","destList","_getHandles","handle","handles","querySelectorAll","concat","_destroySortable","sortableElement","opts","children","_enableSortable","spanEl","document","createElement","dragDrop","disableIEFix","parent","parentElement","_disableSortable","_reloadSortable","_index","_attached","parentNode","_html2element","html","div","innerHTML","firstChild","_before","target","insertBefore","_after","nextElementSibling","_detach","removeChild","_makeEvent","name","detail","e","createEvent","initEvent","_dispatchEventOnConnected","forEach","dispatchEvent","sortableElements","options","method","String","connectWith","placeholder","dragImage","placeholderClass","draggingClass","hoverClass","option","test","index","startParent","tagName","classList","add","apply","split","getAttribute","id","remove","stopImmediatePropagation","console","log","getComputedStyle","height","item","startparent","newParent","style","display","oldDisplay","oldindex","elementIndex","oldElementIndex","endparent","visiblePlaceholder","preventDefault","stopPropagation","filter","onDragOverEnter","dropEffect","thisHeight","placeholderIndex","thisIndex","forcePlaceholderSize","deadZone","offsetTop","appendChild","destroy","enable","disable"],"mappings":"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","sourcesContent":["alert(\"hey there\")\n\n;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.sortable = factory();\n    }\n}(this, function () {\n    /*\n     * HTML5 Sortable library\n     * https://github.com/voidberg/html5sortable\n     *\n     * Original code copyright 2012 Ali Farhadi.\n     * This version is mantained by Alexandru Badiu <andu@ctrlz.ro> & Lukas Oppermann <lukas@vea.re>\n     * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\n     *\n     * Released under the MIT license.\n     */\n    'use strict';\n    /*\n     * variables global to the plugin\n     */\n    var dragging;\n    var draggingHeight;\n    var placeholders = [];\n    var sortables = [];\n    /**\n     * Get or set data on element\n     * @param {Element} element\n     * @param {string} key\n     * @param {*} value\n     * @return {*}\n     */\n    var _data = function (element, key, value) {\n        if (value === undefined) {\n            return element && element.h5s && element.h5s.data && element.h5s.data[key];\n        } else {\n            element.h5s = element.h5s || {};\n            element.h5s.data = element.h5s.data || {};\n            element.h5s.data[key] = value;\n        }\n    };\n    /**\n     * Remove data from element\n     * @param {Element} element\n     */\n    var _removeData = function (element) {\n        if (element.h5s) {\n            delete element.h5s.data;\n        }\n    };\n    /**\n     * Cross-browser shortcut for actual `Element.matches` method,\n     * which has vendor prefix in older browsers\n     */\n    var matches;\n    switch (true) {\n        case 'matches' in window.Element.prototype:\n            matches = 'matches';\n            break;\n        case 'mozMatchesSelector' in window.Element.prototype:\n            matches = 'mozMatchesSelector';\n            break;\n        case 'msMatchesSelector' in window.Element.prototype:\n            matches = 'msMatchesSelector';\n            break;\n        case 'webkitMatchesSelector' in window.Element.prototype:\n            matches = 'webkitMatchesSelector';\n            break;\n    }\n    /**\n     * Filter only wanted nodes\n     * @param {Array|NodeList} nodes\n     * @param {Array/string} wanted\n     * @returns {Array}\n     */\n    var _filter = function (nodes, wanted) {\n        if (!wanted) {\n            return Array.prototype.slice.call(nodes);\n        }\n        var result = [];\n        for (var i = 0; i < nodes.length; ++i) {\n            if (typeof wanted === 'string' && nodes[i][matches](wanted)) {\n                result.push(nodes[i]);\n            }\n            if (wanted.indexOf(nodes[i]) !== -1) {\n                result.push(nodes[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {Array|Element} element\n     * @param {Array|string} event\n     * @param {Function} callback\n     */\n    var _on = function (element, event, callback) {\n        if (element instanceof Array) {\n            for (var i = 0; i < element.length; ++i) {\n                _on(element[i], event, callback);\n            }\n            return;\n        }\n        element.addEventListener(event, callback);\n        element.h5s = element.h5s || {};\n        element.h5s.events = element.h5s.events || {};\n        element.h5s.events[event] = callback;\n    };\n    /**\n     * @param {Array|Element} element\n     * @param {Array|string} event\n     */\n    var _off = function (element, event) {\n        if (element instanceof Array) {\n            for (var i = 0; i < element.length; ++i) {\n                _off(element[i], event);\n            }\n            return;\n        }\n        if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n            element.removeEventListener(event, element.h5s.events[event]);\n            delete element.h5s.events[event];\n        }\n    };\n    /**\n     * @param {Array|Element} element\n     * @param {string} attribute\n     * @param {*} value\n     */\n    var _attr = function (element, attribute, value) {\n        if (element instanceof Array) {\n            for (var i = 0; i < element.length; ++i) {\n                _attr(element[i], attribute, value);\n            }\n            return;\n        }\n        element.setAttribute(attribute, value);\n    };\n    /**\n     * @param {Array|Element} element\n     * @param {string} attribute\n     */\n    var _removeAttr = function (element, attribute) {\n        if (element instanceof Array) {\n            for (var i = 0; i < element.length; ++i) {\n                _removeAttr(element[i], attribute);\n            }\n            return;\n        }\n        element.removeAttribute(attribute);\n    };\n    /**\n     * @param {Element} element\n     * @returns {{left: *, top: *}}\n     */\n    var _offset = function (element) {\n        var rect = element.getClientRects()[0];\n        return {\n            left: rect.left + window.scrollX,\n            top: rect.top + window.scrollY\n        };\n    };\n    /*\n     * remove event handlers from items\n     * @param {Array|NodeList} items\n     */\n    var _removeItemEvents = function (items) {\n        _off(items, 'dragstart');\n        _off(items, 'dragend');\n        _off(items, 'selectstart');\n        _off(items, 'dragover');\n        _off(items, 'dragenter');\n        _off(items, 'drop');\n    };\n    /*\n     * Remove event handlers from sortable\n     * @param {Element} sortable a single sortable\n     */\n    var _removeSortableEvents = function (sortable) {\n        _off(sortable, 'dragover');\n        _off(sortable, 'dragenter');\n        _off(sortable, 'drop');\n    };\n    /*\n     * Attach ghost to dataTransfer object\n     * @param {Event} original event\n     * @param {object} ghost-object with item, x and y coordinates\n     */\n    var _attachGhost = function (event, ghost) {\n        // this needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'move';\n        event.dataTransfer.setData('text', '');\n\n        // check if setDragImage method is available\n        if (event.dataTransfer.setDragImage) {\n            event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y);\n        }\n    };\n    /**\n     * _addGhostPos clones the dragged item and adds it as a Ghost item\n     * @param {Event} event - the event fired when dragstart is triggered\n     * @param {object} ghost - .draggedItem = Element\n     */\n    var _addGhostPos = function (event, ghost) {\n        if (!ghost.x) {\n            ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left);\n        }\n        if (!ghost.y) {\n            ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top);\n        }\n        return ghost;\n    };\n    /**\n     * _makeGhost decides which way to make a ghost and passes it to attachGhost\n     * @param {Element} draggedItem - the item that the user drags\n     */\n    var _makeGhost = function (draggedItem) {\n        return {\n            draggedItem: draggedItem\n        };\n    };\n    /**\n     * _getGhost constructs ghost and attaches it to dataTransfer\n     * @param {Event} event - the original drag event object\n     * @param {Element} draggedItem - the item that the user drags\n     */\n// TODO: could draggedItem be replaced by event.target in all instances\n    var _getGhost = function (event, draggedItem) {\n        // add ghost item & draggedItem to ghost object\n        var ghost = _makeGhost(draggedItem);\n        // attach ghost position\n        ghost = _addGhostPos(event, ghost);\n        // attach ghost to dataTransfer\n        _attachGhost(event, ghost);\n    };\n    /*\n     * Remove data from sortable\n     * @param {Element} sortable a single sortable\n     */\n    var _removeSortableData = function (sortable) {\n        _removeData(sortable);\n        _removeAttr(sortable, 'aria-dropeffect');\n    };\n    /*\n     * Remove data from items\n     * @param {Array|Element} items\n     */\n    var _removeItemData = function (items) {\n        _removeAttr(items, 'aria-grabbed');\n        _removeAttr(items, 'draggable');\n        _removeAttr(items, 'role');\n    };\n    /*\n     * Check if two lists are connected\n     * @param {Element} curList\n     * @param {Element} destList\n     */\n    var _listsConnected = function (curList, destList) {\n        if (curList === destList) {\n            return true;\n        }\n        if (_data(curList, 'connectWith') !== undefined) {\n            return _data(curList, 'connectWith') === _data(destList, 'connectWith');\n        }\n        return false;\n    };\n    var _getHandles = function (items, handle) {\n        var result = [];\n        var handles;\n        if (!handle) {\n            return items;\n        }\n        for (var i = 0; i < items.length; ++i) {\n            handles = items[i].querySelectorAll(handle);\n            result = result.concat(Array.prototype.slice.call(handles));\n        }\n        return result;\n    };\n    /*\n     * Destroy the sortable\n     * @param {Element} sortableElement a single sortable\n     */\n    var _destroySortable = function (sortableElement) {\n        var opts = _data(sortableElement, 'opts') || {};\n        var items = _filter(sortableElement.children, opts.items);\n        var handles = _getHandles(items, opts.handle);\n        // remove event handlers & data from sortable\n        _removeSortableEvents(sortableElement);\n        _removeSortableData(sortableElement);\n        // remove event handlers & data from items\n        _off(handles, 'mousedown');\n        _removeItemEvents(items);\n        _removeItemData(items);\n    };\n    /*\n     * Enable the sortable\n     * @param {Element} sortableElement a single sortable\n     */\n    var _enableSortable = function (sortableElement) {\n        var opts = _data(sortableElement, 'opts');\n        var items = _filter(sortableElement.children, opts.items);\n        var handles = _getHandles(items, opts.handle);\n        _attr(sortableElement, 'aria-dropeffect', 'move');\n        _attr(handles, 'draggable', 'true');\n        // IE FIX for ghost\n        // can be disabled as it has the side effect that other events\n        // (e.g. click) will be ignored\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n            _on(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                } else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    };\n    /*\n     * Disable the sortable\n     * @param {Element} sortableElement a single sortable\n     */\n    var _disableSortable = function (sortableElement) {\n        var opts = _data(sortableElement, 'opts');\n        var items = _filter(sortableElement.children, opts.items);\n        var handles = _getHandles(items, opts.handle);\n        _attr(sortableElement, 'aria-dropeffect', 'none');\n        _attr(handles, 'draggable', 'false');\n        _off(handles, 'mousedown');\n    };\n    /*\n     * Reload the sortable\n     * @param {Element} sortableElement a single sortable\n     * @description events need to be removed to not be double bound\n     */\n    var _reloadSortable = function (sortableElement) {\n        var opts = _data(sortableElement, 'opts');\n        var items = _filter(sortableElement.children, opts.items);\n        var handles = _getHandles(items, opts.handle);\n        // remove event handlers from items\n        _removeItemEvents(items);\n        _off(handles, 'mousedown');\n        // remove event handlers from sortable\n        _removeSortableEvents(sortableElement);\n    };\n    /**\n     * Get position of the element relatively to its sibling elements\n     * @param {Element} element\n     * @returns {number}\n     */\n    var _index = function (element) {\n        if (!element.parentElement) {\n            return 0;\n        }\n        return Array.prototype.indexOf.call(element.parentElement.children, element);\n    };\n    /**\n     * Whether element is in DOM\n     * @param {Element} element\n     * @returns {boolean}\n     */\n    var _attached = function (element) {\n        return !!element.parentNode;\n    };\n    /**\n     * Convert HTML string into DOM element\n     * @param {Element|string} html\n     * @returns {Element}\n     */\n    var _html2element = function (html) {\n        if (typeof html !== 'string') {\n            return html;\n        }\n        var div = document.createElement('div');\n        div.innerHTML = html;\n        return div.firstChild;\n    };\n    /**\n     * Insert before target\n     * @param {Element} target\n     * @param {Element} element\n     */\n    var _before = function (target, element) {\n        target.parentElement.insertBefore(\n            element,\n            target\n        );\n    };\n    /**\n     * Insert after target\n     * @param {Element} target\n     * @param {Element} element\n     */\n    var _after = function (target, element) {\n        target.parentElement.insertBefore(\n            element,\n            target.nextElementSibling\n        );\n    };\n    /**\n     * Detach element from DOM\n     * @param {Element} element\n     */\n    var _detach = function (element) {\n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    };\n    /**\n     * Make native event that can be dispatched afterwards\n     * @param {string} name\n     * @param {object} detail\n     * @returns {CustomEvent}\n     */\n    var _makeEvent = function (name, detail) {\n        var e = document.createEvent('Event');\n        if (detail) {\n            e.detail = detail;\n        }\n        e.initEvent(name, false, true);\n        return e;\n    };\n    /**\n     * @param {Element} sortableElement\n     * @param {CustomEvent} event\n     */\n    var _dispatchEventOnConnected = function (sortableElement, event) {\n        sortables.forEach(function (target) {\n            if (_listsConnected(sortableElement, target)) {\n                target.dispatchEvent(event);\n            }\n        });\n    };\n    /*\n     * Public sortable object\n     * @param {Array|NodeList} sortableElements\n     * @param {object|string} options|method\n     */\n    var sortable = function (sortableElements, options) {\n\n        var method = String(options);\n\n        options = (function (options) {\n            var result = {\n                connectWith: false,\n                placeholder: null,\n                // dragImage can be null or a Element\n                dragImage: null,\n                disableIEFix: false,\n                placeholderClass: 'sortable-placeholder',\n                draggingClass: 'sortable-dragging',\n                hoverClass: false\n            };\n            for (var option in options) {\n                result[option] = options[option];\n            }\n            return result;\n        })(options);\n\n        if (typeof sortableElements === 'string') {\n            sortableElements = document.querySelectorAll(sortableElements);\n        }\n\n        if (sortableElements instanceof window.Element) {\n            sortableElements = [sortableElements];\n        }\n\n        sortableElements = Array.prototype.slice.call(sortableElements);\n\n        /* TODO: maxstatements should be 25, fix and remove line below */\n        /*jshint maxstatements:false */\n        sortableElements.forEach(function (sortableElement) {\n\n            if (/enable|disable|destroy/.test(method)) {\n                sortable[method](sortableElement);\n                return;\n            }\n\n            // get options & set options on sortable\n            options = _data(sortableElement, 'opts') || options;\n            _data(sortableElement, 'opts', options);\n            // reset sortable\n            _reloadSortable(sortableElement);\n            // initialize\n            var items = _filter(sortableElement.children, options.items);\n            var index;\n            var startParent;\n            var placeholder = options.placeholder;\n            if (!placeholder) {\n                placeholder = document.createElement(\n                    /^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div'\n                );\n            }\n            placeholder = _html2element(placeholder);\n            placeholder.classList.add.apply(\n                placeholder.classList,\n                options.placeholderClass.split(' ')\n            );\n\n            // setup sortable ids\n            if (!sortableElement.getAttribute('data-sortable-id')) {\n                var id = sortables.length;\n                sortables[id] = sortableElement;\n                _attr(sortableElement, 'data-sortable-id', id);\n                _attr(items, 'data-item-sortable-id', id);\n            }\n\n            _data(sortableElement, 'items', options.items);\n            placeholders.push(placeholder);\n            if (options.connectWith) {\n                _data(sortableElement, 'connectWith', options.connectWith);\n            }\n\n            _enableSortable(sortableElement);\n            _attr(items, 'role', 'option');\n            _attr(items, 'aria-grabbed', 'false');\n\n            // Mouse over class\n            if (options.hoverClass) {\n                var hoverClass = 'sortable-over';\n                if (typeof options.hoverClass === 'string') {\n                    hoverClass = options.hoverClass;\n                }\n\n                _on(items, 'mouseenter', function () {\n                    this.classList.add(hoverClass);\n                });\n                _on(items, 'mouseleave', function () {\n                    this.classList.remove(hoverClass);\n                });\n            }\n\n            // Handle drag events on draggable items\n            _on(items, 'dragstart', function (e) {\n                e.stopImmediatePropagation();\n\n                if (options.dragImage) {\n                    _attachGhost(e, {\n                        draggedItem: options.dragImage,\n                        x: 0,\n                        y: 0\n                    });\n                    console.log('WARNING: dragImage option is deprecated' +\n                        ' and will be removed in the future!');\n                } else {\n                    // add transparent clone or other ghost to cursor\n                    _getGhost(e, this);\n                }\n                // cache selsection & add attr for dragging\n                this.classList.add(options.draggingClass);\n                dragging = this;\n                _attr(dragging, 'aria-grabbed', 'true');\n                // grab values\n                index = _index(dragging);\n                draggingHeight = parseInt(window.getComputedStyle(dragging).height);\n                startParent = this.parentElement;\n                // dispatch sortstart event on each element in group\n                _dispatchEventOnConnected(sortableElement, _makeEvent('sortstart', {\n                    item: dragging,\n                    placeholder: placeholder,\n                    startparent: startParent\n                }));\n            });\n            // Handle drag events on draggable items\n            _on(items, 'dragend', function () {\n                var newParent;\n                if (!dragging) {\n                    return;\n                }\n                // remove dragging attributes and show item\n                dragging.classList.remove(options.draggingClass);\n                _attr(dragging, 'aria-grabbed', 'false');\n                dragging.style.display = dragging.oldDisplay;\n                delete dragging.oldDisplay;\n\n                placeholders.forEach(_detach);\n                newParent = this.parentElement;\n                _dispatchEventOnConnected(sortableElement, _makeEvent('sortstop', {\n                    item: dragging,\n                    startparent: startParent\n                }));\n                if (index !== _index(dragging) || startParent !== newParent) {\n                    _dispatchEventOnConnected(sortableElement, _makeEvent('sortupdate', {\n                        item: dragging,\n                        index: _filter(newParent.children, _data(newParent, 'items'))\n                            .indexOf(dragging),\n                        oldindex: items.indexOf(dragging),\n                        elementIndex: _index(dragging),\n                        oldElementIndex: index,\n                        startparent: startParent,\n                        endparent: newParent\n                    }));\n                }\n                dragging = null;\n                draggingHeight = null;\n            });\n            // Handle drop event on sortable & placeholder\n            // TODO: REMOVE placeholder?????\n            _on([sortableElement, placeholder], 'drop', function (e) {\n                var visiblePlaceholder;\n                if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                visiblePlaceholder = placeholders.filter(_attached)[0];\n                _after(visiblePlaceholder, dragging);\n                dragging.dispatchEvent(_makeEvent('dragend'));\n            });\n\n            // Handle dragover and dragenter events on draggable items\n            var onDragOverEnter = function (e) {\n                if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                e.dataTransfer.dropEffect = 'move';\n                if (items.indexOf(this) !== -1) {\n                    var thisHeight = parseInt(window.getComputedStyle(this).height);\n                    var placeholderIndex = _index(placeholder);\n                    var thisIndex = _index(this);\n                    if (options.forcePlaceholderSize) {\n                        placeholder.style.height = draggingHeight + 'px';\n                    }\n\n                    // Check if `this` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                    if (thisHeight > draggingHeight) {\n                        // Dead zone?\n                        var deadZone = thisHeight - draggingHeight;\n                        var offsetTop = _offset(this).top;\n                        if (placeholderIndex < thisIndex &&\n                            e.pageY < offsetTop + deadZone) {\n                            return;\n                        }\n                        if (placeholderIndex > thisIndex &&\n                            e.pageY > offsetTop + thisHeight - deadZone) {\n                            return;\n                        }\n                    }\n\n                    if (dragging.oldDisplay === undefined) {\n                        dragging.oldDisplay = dragging.style.display;\n                    }\n                    dragging.style.display = 'none';\n                    if (placeholderIndex < thisIndex) {\n                        _after(this, placeholder);\n                    } else {\n                        _before(this, placeholder);\n                    }\n                    // Intentionally violated chaining, it is more complex otherwise\n                    placeholders\n                        .filter(function (element) {\n                            return element !== placeholder;\n                        })\n                        .forEach(_detach);\n                } else {\n                    if (placeholders.indexOf(this) === -1 &&\n                        !_filter(this.children, options.items).length) {\n                        placeholders.forEach(_detach);\n                        this.appendChild(placeholder);\n                    }\n                }\n            };\n            _on(items.concat(sortableElement), 'dragover', onDragOverEnter);\n            _on(items.concat(sortableElement), 'dragenter', onDragOverEnter);\n        });\n\n        return sortableElements;\n    };\n\n    sortable.destroy = function (sortableElement) {\n        _destroySortable(sortableElement);\n    };\n\n    sortable.enable = function (sortableElement) {\n        _enableSortable(sortableElement);\n    };\n\n    sortable.disable = function (sortableElement) {\n        _disableSortable(sortableElement);\n    };\n\n\n    return sortable;\n}));"]},"metadata":{},"sourceType":"module"}